---
import { Code } from 'astro/components';
import InterestingThingsLayout from "../../layouts/interesting-things-layout.astro";
---

<InterestingThingsLayout title="Exploring text gradients">
	<h1>Exploring text <span class="gradient-text">gradients</span></h1>
	<p>
		Recently, I've often seen fancy gradient backgrounds for text on landing
		pages. Some good examples of this gradient text are the <a
			href="https://vuejs.org/"
			rel="noopener noreferrer">Vue</a
		> landing page and the
		<a href="https://mui.com/" rel="noopener noreferrer">MUI</a> landing page.
	</p>
	<p>
		I was intrigued because it's not possible to use gradients in the <code
			>color</code
		> attribute, and the text was selectable, so it wasn't an image.
	</p>
	<p>
		Both of the above examples use the following css to implement the
		text-gradient:
	</p>
	<Code lang="css" theme="dark-plus" code={`#gradient-title-text {
	background: linear-gradient(to right, #f00, #0f0, #6ff);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
}`} />
	<p>
		The way that these work is pretty clever. The steps are as follows:
	</p>
	<ol>
		<li>A gradient is applied to the text's background, like so: <span class="gradient-background">gradient-background</span>.</li>
		<li>The background is clipped around the text, kind of like masking in Photoshop or After Effects. The text now looks like it does normally.</li>
		<li>The text is made transparent, so the gradient behind it can be seen. <span class="gradient-text">Final product</span>.</li>
	</ol>
	<p>
		While this CSS works fine and achieves the desired effect, there are a few oddities. For one, this code
		uses the non-standard <code>-webkit-text-fill-color</code> property to make the
		text transparent for some reason. I'm not sure why the authors of these sites
		chose to use that instead of just using the <code>color</code> property, as in
		my testing, they both produced the same results.
	</p>
	<p>
		Another odd thing I saw was the <code>-webkit-</code> prefix for the <code
			>background-clip</code
		> property. I found out that even though <code>background-clip: text;</code>
		works fine in Firefox, in Chromium-based browsers it doesn't have any effect.
		It turns out that this is because using the value <code>text</code> for the <code
			>background-clip</code
		> property is non-standard, and most browsers require the <code
			>-webkit-</code
		> prefix on the <code>background-clip</code> property for it to work with the
		value <code>text</code> (if the browser supports it at all).
	</p>
	<p>
		The revelation about the non-standard nature of <code
			>-webkit-background-clip: text;</code
		> also explains the use of <code>-webkit-text-fill-color</code> instead of <code
			>color</code
		>. Most browsers that support <code>-webkit-background-clip: text;</code> also
		support <code>-webkit-text-fill-color</code>, meaning that by not overriding
		the <code>color</code> property, browsers that don't support <code
			>-webkit-background-clip: text;</code
		> will fall back to inheriting the <code>color</code> property.
	</p>
	<p>
		When using this gradient text it's important to make sure that the text is legible,
		because some of the colours that look nice in gradients are not always easy to read.
		Often this will require displaying it on a contrasting background or only using it in very large text like a page heading.
	</p>
	<p>
		One last thing I found was that I had to update my <code>::selection</code>
		styles to override <code>-webkit-text-fill-color</code> as well as <code
			>color</code
		>, because the text was no longer visible when selected, due to it being
		made transparent for the gradient.
	</p>
</InterestingThingsLayout>

<style>
	:global(:root) {
		--example-gradient: linear-gradient(to right, #f00, #0f0, #6ff);
	}
	.gradient-text {
		background: var(--example-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
	}
	.gradient-background {
		background: var(--example-gradient);
	}
</style>
